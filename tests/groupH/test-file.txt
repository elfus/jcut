# Positive testing
sum2,4) == 6;
sum(-10 20) == 10;
sum(10, -20 == -10;
sum(-15,-15)  -30;

sum(2.3, 3.68) > 4
sum(4.5678, 2.1) < ;
sum(2,2);
(2.3, 3.68) >= 5; # If the previous test failed, this case will be skipped
sum(4.5678, 2.1)

group A {
    mult(2.5,4) > -10;
}

group B
    mult(2.5,4) > -10;
}

group B
    mult(2.5,4) > -10;
}

group B {
    mult(2.5,4) > -10;
}

group C {
    mult(2.5,4) == 111;
    group B
        mult(2.5,4) > -10;
    }

    group B {
         group B
            mult(2.5,4) > -10;
        }
        mult(2.5,4) > 222;
    }

     group B
        mult(2.5,4) > 999;
     }

     mult(2.5,4) > 333;
}

# continue detecting errors on test-fixtures
# Whenever we detect an error in a test fixture we must abort current test definition
before {
    msg()
}
get_gint() == 0;

before {
    gint = 7
}
get_gint() == 0;

before {
    gint = 7
    msg() # msg() is picked up as a valid identifier, we must skip it
}
get_gint() == 0;

before {
    msg() # msg() is picked up as a valid identifier, we must skip it
    gint = 7 # in this case this expression is detected as a function call
}
get_gint() == 0;

before {
    msg(); # msg() is picked up as a valid identifier, we must skip it
    gint = 7 # in this case this expression is detected as a function call
}
get_gint() == 0;

before {
    msg()
    gint = 7; # in this case this expression is detected as a function call
}
get_gint() == 0;

before {
    gint = 7; # in this case this expression is detected as a function call
}
get_gint() == 7;

