print_ptr_char([10:26]);

print_bfr([8:0],8);

do_cmath([1]);
do_cmath([1:10]);

do_ucmath([1]);
do_ucmath([1:10]);

do_math([1]);
do_math([1:10]);

do_umath([1]);
do_umath([1:10]);

do_short_math([1]);
do_short_math([1:10]);

do_ushort_math([1]);
do_ushort_math([1:10]);

do_long_math([1]);
do_long_math([1:10]);

do_ulong_math([1]);
do_ulong_math([1:10]);

do_float_math([1]);
do_float_math([1:3.141592]);

do_double_math([1]);
do_double_math([1:6.78965]);

is_initialized([32], 32, 0) == 0;
is_initialized([32], 32, 1) == 1;
is_initialized([64:10], 64, 10) == 0;
is_initialized([64:10], 64, 18) == 1;
is_initialized([256:0], 256, 0) == 0;
is_initialized([256:0], 256, 10) == 1;

reverse_buffer([10],10) == 0;

# These test global pointers (normal pointers)
print_gptr_int();

math_gptr_int() == 1;

before { gptr_int = [1]; }
math_gptr_int() == 0;
after { gptr_int != 0; }

before { gptr_int = [1]; }
get_gptr_adrr() != 0;
after { gptr_int != 0; }

get_gptr_adrr() == 0;

get_gptr_adrr() == 0;
after { gptr_int = [1]; gptr_int != 0; }

# pointers to pointers
get_gpp_addr() == 0;

before { gpp_int = [1]; }
get_gpp_addr() != 0;

math_gpp_int() == 1;

math_gpp_int() == 1;
after { gpp_int == 0; }

before { gpp_int = [1]; }
math_gpp_int() == 0;
after { gpp_int != 0; }

math_gpp_int() == 1;
after { gpp_int = [1]; gpp_int != 0; }


get_ptr_func_addr() == 0;

pp_math([1]);